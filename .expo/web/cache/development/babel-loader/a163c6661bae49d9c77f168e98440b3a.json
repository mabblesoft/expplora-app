{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hide = hide;\nexports.hideAsync = hideAsync;\nexports.preventAutoHide = preventAutoHide;\nexports.preventAutoHideAsync = preventAutoHideAsync;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _ExpoSplashScreen = _interopRequireDefault(require(\"./ExpoSplashScreen\"));\n\nfunction preventAutoHideAsync() {\n  return _preventAutoHideAsync.apply(this, arguments);\n}\n\nfunction _preventAutoHideAsync() {\n  _preventAutoHideAsync = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_ExpoSplashScreen.default.preventAutoHideAsync) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new _expoModulesCore.UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n\n          case 2:\n            _context.next = 4;\n            return _ExpoSplashScreen.default.preventAutoHideAsync();\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _preventAutoHideAsync.apply(this, arguments);\n}\n\nfunction hideAsync() {\n  return _hideAsync.apply(this, arguments);\n}\n\nfunction _hideAsync() {\n  _hideAsync = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_ExpoSplashScreen.default.hideAsync) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new _expoModulesCore.UnavailabilityError('expo-splash-screen', 'hideAsync');\n\n          case 2:\n            _context2.next = 4;\n            return _ExpoSplashScreen.default.hideAsync();\n\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _hideAsync.apply(this, arguments);\n}\n\nfunction hide() {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\nfunction preventAutoHide() {\n  console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');\n  preventAutoHideAsync();\n}","map":{"version":3,"sources":["../src/SplashScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;SAMsB,oB;;;;;oFAAf;IAAA;MAAA;QAAA;UAAA;YAAA,IACA,yBAAA,CAAiB,oBADjB;cAAA;cAAA;YAAA;;YAAA,MAEG,IAAI,oCAAJ,CAAwB,oBAAxB,EAA8C,sBAA9C,CAFH;;UAAA;YAAA;YAAA,OAIQ,yBAAA,CAAiB,oBAAjB,EAJR;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;SAae,S;;;;;yEAAf;IAAA;MAAA;QAAA;UAAA;YAAA,IACA,yBAAA,CAAiB,SADjB;cAAA;cAAA;YAAA;;YAAA,MAEG,IAAI,oCAAJ,CAAwB,oBAAxB,EAA8C,WAA9C,CAFH;;UAAA;YAAA;YAAA,OAIQ,yBAAA,CAAiB,SAAjB,EAJR;;UAAA;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAWD,SAAU,IAAV,GAAc;EAClB,OAAO,CAAC,IAAR,CAAa,yEAAb;EACA,SAAS;AACV;;AAMK,SAAU,eAAV,GAAyB;EAC7B,OAAO,CAAC,IAAR,CACE,+FADF;EAGA,oBAAoB;AACrB","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}