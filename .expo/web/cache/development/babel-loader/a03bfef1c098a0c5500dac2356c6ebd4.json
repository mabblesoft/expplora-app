{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Tab One',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["/Users/manivannanbabu/mabblesoft/workspace/expplora-app/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n\tNavigationContainer,\n\tDefaultTheme,\n\tDarkTheme,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport {\n\tRootStackParamList,\n\tRootTabParamList,\n\tRootTabScreenProps,\n} from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({\n\tcolorScheme,\n}: {\n\tcolorScheme: ColorSchemeName;\n}) {\n\treturn (\n\t\t<NavigationContainer\n\t\t\tlinking={LinkingConfiguration}\n\t\t\ttheme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n\t\t\t<RootNavigator />\n\t\t</NavigationContainer>\n\t);\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n\treturn (\n\t\t<Stack.Navigator>\n\t\t\t<Stack.Screen\n\t\t\t\tname='Root'\n\t\t\t\tcomponent={BottomTabNavigator}\n\t\t\t\toptions={{ headerShown: false }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname='NotFound'\n\t\t\t\tcomponent={NotFoundScreen}\n\t\t\t\toptions={{ title: 'Oops!' }}\n\t\t\t/>\n\t\t\t<Stack.Group screenOptions={{ presentation: 'modal' }}>\n\t\t\t\t<Stack.Screen name='Modal' component={ModalScreen} />\n\t\t\t</Stack.Group>\n\t\t</Stack.Navigator>\n\t);\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n\tconst colorScheme = useColorScheme();\n\n\treturn (\n\t\t<BottomTab.Navigator\n\t\t\tinitialRouteName='TabOne'\n\t\t\tscreenOptions={{\n\t\t\t\ttabBarActiveTintColor: Colors[colorScheme].tint,\n\t\t\t}}>\n\t\t\t<BottomTab.Screen\n\t\t\t\tname='TabOne'\n\t\t\t\tcomponent={TabOneScreen}\n\t\t\t\toptions={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n\t\t\t\t\ttitle: 'Tab One',\n\t\t\t\t\ttabBarIcon: ({ color }) => <TabBarIcon name='code' color={color} />,\n\t\t\t\t\theaderRight: () => (\n\t\t\t\t\t\t<Pressable\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('Modal')}\n\t\t\t\t\t\t\tstyle={({ pressed }) => ({\n\t\t\t\t\t\t\t\topacity: pressed ? 0.5 : 1,\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<FontAwesome\n\t\t\t\t\t\t\t\tname='info-circle'\n\t\t\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\t\t\tcolor={Colors[colorScheme].text}\n\t\t\t\t\t\t\t\tstyle={{ marginRight: 15 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t/>\n\t\t\t<BottomTab.Screen\n\t\t\t\tname='TabTwo'\n\t\t\t\tcomponent={TabTwoScreen}\n\t\t\t\toptions={{\n\t\t\t\t\ttitle: 'Tab Two',\n\t\t\t\t\ttabBarIcon: ({ color }) => <TabBarIcon name='code' color={color} />,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</BottomTab.Navigator>\n\t);\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n\tname: React.ComponentProps<typeof FontAwesome>['name'];\n\tcolor: string;\n}) {\n\treturn <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}