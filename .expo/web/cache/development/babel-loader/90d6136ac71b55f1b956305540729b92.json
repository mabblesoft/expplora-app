{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _nativeStack = require(\"@react-navigation/native-stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Pressable = _interopRequireDefault(require(\"react-native-web/dist/exports/Pressable\"));\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _useColorScheme = _interopRequireDefault(require(\"../hooks/useColorScheme\"));\n\nvar _ModalScreen = _interopRequireDefault(require(\"../screens/ModalScreen\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _TabOneScreen = _interopRequireDefault(require(\"../screens/TabOneScreen\"));\n\nvar _TabTwoScreen = _interopRequireDefault(require(\"../screens/TabTwoScreen\"));\n\nvar _LinkingConfiguration = _interopRequireDefault(require(\"./LinkingConfiguration\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _jsxFileName = \"/Users/manivannanbabu/mabblesoft/workspace/expplora-app/navigation/index.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n    linking: _LinkingConfiguration.default,\n    theme: colorScheme === 'dark' ? _native.DarkTheme : _native.DefaultTheme,\n    children: (0, _jsxRuntime.jsx)(RootNavigator, {})\n  });\n}\n\nvar Stack = (0, _nativeStack.createNativeStackNavigator)();\n\nfunction RootNavigator() {\n  return (0, _jsxRuntime.jsxs)(Stack.Navigator, {\n    children: [(0, _jsxRuntime.jsx)(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n      name: \"NotFound\",\n      component: _NotFoundScreen.default,\n      options: {\n        title: 'Oops!'\n      }\n    }), (0, _jsxRuntime.jsx)(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: (0, _jsxRuntime.jsx)(Stack.Screen, {\n        name: \"Modal\",\n        component: _ModalScreen.default\n      })\n    })]\n  });\n}\n\nvar BottomTab = (0, _bottomTabs.createBottomTabNavigator)();\n\nfunction BottomTabNavigator() {\n  var _this = this;\n\n  var colorScheme = (0, _useColorScheme.default)();\n  return (0, _jsxRuntime.jsxs)(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: _Colors.default[colorScheme].tint\n    },\n    children: [(0, _jsxRuntime.jsx)(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: _TabOneScreen.default,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Tab One',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return (0, _jsxRuntime.jsx)(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return (0, _jsxRuntime.jsx)(_Pressable.default, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: (0, _jsxRuntime.jsx)(_vectorIcons.FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: _Colors.default[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), (0, _jsxRuntime.jsx)(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: _TabTwoScreen.default,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return (0, _jsxRuntime.jsx)(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return (0, _jsxRuntime.jsx)(_vectorIcons.FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["Navigation","colorScheme","LinkingConfiguration","DarkTheme","DefaultTheme","Stack","createNativeStackNavigator","RootNavigator","BottomTabNavigator","headerShown","NotFoundScreen","title","presentation","ModalScreen","BottomTab","createBottomTabNavigator","useColorScheme","tabBarActiveTintColor","Colors","tint","TabOneScreen","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabTwoScreen","TabBarIcon","props","marginBottom"],"sources":["/Users/manivannanbabu/mabblesoft/workspace/expplora-app/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n\tNavigationContainer,\n\tDefaultTheme,\n\tDarkTheme,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport {\n\tRootStackParamList,\n\tRootTabParamList,\n\tRootTabScreenProps,\n} from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({\n\tcolorScheme,\n}: {\n\tcolorScheme: ColorSchemeName;\n}) {\n\treturn (\n\t\t<NavigationContainer\n\t\t\tlinking={LinkingConfiguration}\n\t\t\ttheme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n\t\t\t<RootNavigator />\n\t\t</NavigationContainer>\n\t);\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n\treturn (\n\t\t<Stack.Navigator>\n\t\t\t<Stack.Screen\n\t\t\t\tname='Root'\n\t\t\t\tcomponent={BottomTabNavigator}\n\t\t\t\toptions={{ headerShown: false }}\n\t\t\t/>\n\t\t\t<Stack.Screen\n\t\t\t\tname='NotFound'\n\t\t\t\tcomponent={NotFoundScreen}\n\t\t\t\toptions={{ title: 'Oops!' }}\n\t\t\t/>\n\t\t\t<Stack.Group screenOptions={{ presentation: 'modal' }}>\n\t\t\t\t<Stack.Screen name='Modal' component={ModalScreen} />\n\t\t\t</Stack.Group>\n\t\t</Stack.Navigator>\n\t);\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n\tconst colorScheme = useColorScheme();\n\n\treturn (\n\t\t<BottomTab.Navigator\n\t\t\tinitialRouteName='TabOne'\n\t\t\tscreenOptions={{\n\t\t\t\ttabBarActiveTintColor: Colors[colorScheme].tint,\n\t\t\t}}>\n\t\t\t<BottomTab.Screen\n\t\t\t\tname='TabOne'\n\t\t\t\tcomponent={TabOneScreen}\n\t\t\t\toptions={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n\t\t\t\t\ttitle: 'Tab One',\n\t\t\t\t\ttabBarIcon: ({ color }) => <TabBarIcon name='code' color={color} />,\n\t\t\t\t\theaderRight: () => (\n\t\t\t\t\t\t<Pressable\n\t\t\t\t\t\t\tonPress={() => navigation.navigate('Modal')}\n\t\t\t\t\t\t\tstyle={({ pressed }) => ({\n\t\t\t\t\t\t\t\topacity: pressed ? 0.5 : 1,\n\t\t\t\t\t\t\t})}>\n\t\t\t\t\t\t\t<FontAwesome\n\t\t\t\t\t\t\t\tname='info-circle'\n\t\t\t\t\t\t\t\tsize={25}\n\t\t\t\t\t\t\t\tcolor={Colors[colorScheme].text}\n\t\t\t\t\t\t\t\tstyle={{ marginRight: 15 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Pressable>\n\t\t\t\t\t),\n\t\t\t\t})}\n\t\t\t/>\n\t\t\t<BottomTab.Screen\n\t\t\t\tname='TabTwo'\n\t\t\t\tcomponent={TabTwoScreen}\n\t\t\t\toptions={{\n\t\t\t\t\ttitle: 'Tab Two',\n\t\t\t\t\ttabBarIcon: ({ color }) => <TabBarIcon name='code' color={color} />,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</BottomTab.Navigator>\n\t);\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n\tname: React.ComponentProps<typeof FontAwesome>['name'];\n\tcolor: string;\n}) {\n\treturn <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}