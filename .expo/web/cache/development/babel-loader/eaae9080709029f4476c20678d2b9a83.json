{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _nativeStack = require(\"@react-navigation/native-stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _Pressable = _interopRequireDefault(require(\"react-native-web/dist/exports/Pressable\"));\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _useColorScheme = _interopRequireDefault(require(\"../hooks/useColorScheme\"));\n\nvar _ModalScreen = _interopRequireDefault(require(\"../screens/ModalScreen\"));\n\nvar _NotFoundScreen = _interopRequireDefault(require(\"../screens/NotFoundScreen\"));\n\nvar _TabOneScreen = _interopRequireDefault(require(\"../screens/TabOneScreen\"));\n\nvar _TabTwoScreen = _interopRequireDefault(require(\"../screens/TabTwoScreen\"));\n\nvar _LinkingConfiguration = _interopRequireDefault(require(\"./LinkingConfiguration\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _jsxFileName = \"/Users/manivannanbabu/mabblesoft/workspace/expplora-app/navigation/index.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n    linking: _LinkingConfiguration.default,\n    theme: colorScheme === 'dark' ? _native.DarkTheme : _native.DefaultTheme,\n    children: (0, _jsxRuntime.jsx)(RootNavigator, {})\n  });\n}\n\nvar Stack = (0, _nativeStack.createNativeStackNavigator)();\n\nfunction RootNavigator() {\n  return (0, _jsxRuntime.jsxs)(Stack.Navigator, {\n    children: [(0, _jsxRuntime.jsx)(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n      name: \"NotFound\",\n      component: _NotFoundScreen.default,\n      options: {\n        title: 'Oops!'\n      }\n    }), (0, _jsxRuntime.jsx)(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: (0, _jsxRuntime.jsx)(Stack.Screen, {\n        name: \"Modal\",\n        component: _ModalScreen.default\n      })\n    })]\n  });\n}\n\nvar BottomTab = (0, _bottomTabs.createBottomTabNavigator)();\n\nfunction BottomTabNavigator() {\n  var _this = this;\n\n  var colorScheme = (0, _useColorScheme.default)();\n  return (0, _jsxRuntime.jsxs)(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: _Colors.default[colorScheme].tint\n    },\n    children: [(0, _jsxRuntime.jsx)(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: _TabOneScreen.default,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Tab One',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return (0, _jsxRuntime.jsx)(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return (0, _jsxRuntime.jsx)(_Pressable.default, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: (0, _jsxRuntime.jsx)(_vectorIcons.FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: _Colors.default[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), (0, _jsxRuntime.jsx)(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: _TabTwoScreen.default,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return (0, _jsxRuntime.jsx)(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return (0, _jsxRuntime.jsx)(_vectorIcons.FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["Navigation","colorScheme","LinkingConfiguration","DarkTheme","DefaultTheme","Stack","createNativeStackNavigator","RootNavigator","BottomTabNavigator","headerShown","NotFoundScreen","title","presentation","ModalScreen","BottomTab","createBottomTabNavigator","useColorScheme","tabBarActiveTintColor","Colors","tint","TabOneScreen","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabTwoScreen","TabBarIcon","props","marginBottom"],"sources":["/Users/manivannanbabu/mabblesoft/workspace/expplora-app/navigation/index.tsx"],"sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Tab One',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Tab Two',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}