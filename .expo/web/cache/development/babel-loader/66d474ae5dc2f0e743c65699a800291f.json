{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = Text;\nexports.View = View;\nexports.useThemeColor = useThemeColor;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\n\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _useColorScheme = _interopRequireDefault(require(\"../hooks/useColorScheme\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _jsxFileName = \"/Users/manivannanbabu/mabblesoft/workspace/expplora-app/components/Themed.tsx\";\nvar _excluded = [\"style\", \"lightColor\", \"darkColor\"],\n    _excluded2 = [\"style\", \"lightColor\", \"darkColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction useThemeColor(props, colorName) {\n  var theme = (0, _useColorScheme.default)();\n  var colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return _Colors.default[theme][colorName];\n  }\n}\n\nfunction Text(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n  var color = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'text');\n  return (0, _jsxRuntime.jsx)(_Text.default, _objectSpread({\n    style: [{\n      color: color\n    }, style]\n  }, otherProps));\n}\n\nfunction View(props) {\n  var style = props.style,\n      lightColor = props.lightColor,\n      darkColor = props.darkColor,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded2);\n  var backgroundColor = useThemeColor({\n    light: lightColor,\n    dark: darkColor\n  }, 'background');\n  return (0, _jsxRuntime.jsx)(_View.default, _objectSpread({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps));\n}","map":{"version":3,"names":["useThemeColor","props","colorName","theme","useColorScheme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","light","dark","View","backgroundColor"],"sources":["/Users/manivannanbabu/mabblesoft/workspace/expplora-app/components/Themed.tsx"],"sourcesContent":["/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAOA;;AACA;;;;;;;;;;;;AAEO,SAASA,aAAT,CACLC,KADK,EAELC,SAFK,EAGL;EACA,IAAMC,KAAK,GAAG,IAAAC,uBAAA,GAAd;EACA,IAAMC,cAAc,GAAGJ,KAAK,CAACE,KAAD,CAA5B;;EAEA,IAAIE,cAAJ,EAAoB;IAClB,OAAOA,cAAP;EACD,CAFD,MAEO;IACL,OAAOC,eAAA,CAAOH,KAAP,EAAcD,SAAd,CAAP;EACD;AACF;;AAUM,SAASK,IAAT,CAAcN,KAAd,EAAgC;EACrC,IAAQO,KAAR,GAAwDP,KAAxD,CAAQO,KAAR;EAAA,IAAeC,UAAf,GAAwDR,KAAxD,CAAeQ,UAAf;EAAA,IAA2BC,SAA3B,GAAwDT,KAAxD,CAA2BS,SAA3B;EAAA,IAAyCC,UAAzC,0CAAwDV,KAAxD;EACA,IAAMW,KAAK,GAAGZ,aAAa,CAAC;IAAEa,KAAK,EAAEJ,UAAT;IAAqBK,IAAI,EAAEJ;EAA3B,CAAD,EAAyC,MAAzC,CAA3B;EAEA,OAAO,qBAAC,aAAD;IAAa,KAAK,EAAE,CAAC;MAAEE,KAAK,EAALA;IAAF,CAAD,EAAYJ,KAAZ;EAApB,GAA4CG,UAA5C,EAAP;AACD;;AAEM,SAASI,IAAT,CAAcd,KAAd,EAAgC;EACrC,IAAQO,KAAR,GAAwDP,KAAxD,CAAQO,KAAR;EAAA,IAAeC,UAAf,GAAwDR,KAAxD,CAAeQ,UAAf;EAAA,IAA2BC,SAA3B,GAAwDT,KAAxD,CAA2BS,SAA3B;EAAA,IAAyCC,UAAzC,0CAAwDV,KAAxD;EACA,IAAMe,eAAe,GAAGhB,aAAa,CAAC;IAAEa,KAAK,EAAEJ,UAAT;IAAqBK,IAAI,EAAEJ;EAA3B,CAAD,EAAyC,YAAzC,CAArC;EAEA,OAAO,qBAAC,aAAD;IAAa,KAAK,EAAE,CAAC;MAAEM,eAAe,EAAfA;IAAF,CAAD,EAAsBR,KAAtB;EAApB,GAAsDG,UAAtD,EAAP;AACD"},"metadata":{},"sourceType":"script"}