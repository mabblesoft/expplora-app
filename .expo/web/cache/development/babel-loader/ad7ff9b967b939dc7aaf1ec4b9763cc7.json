{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar Linking = _interopRequireWildcard(require(\"expo-linking\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar linking = {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one'\n            }\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two'\n            }\n          }\n        }\n      },\n      Modal: 'modal',\n      NotFound: '*'\n    }\n  }\n};\nvar _default = linking;\nexports.default = _default;","map":{"version":3,"names":["linking","prefixes","Linking","makeUrl","config","screens","Root","TabOne","TabOneScreen","TabTwo","TabTwoScreen","Modal","NotFound"],"sources":["/Users/manivannanbabu/mabblesoft/workspace/expplora-app/navigation/LinkingConfiguration.ts"],"sourcesContent":["/**\n * Learn more about deep linking with React Navigation\n * https://reactnavigation.org/docs/deep-linking\n * https://reactnavigation.org/docs/configuring-links\n */\n\nimport { LinkingOptions } from '@react-navigation/native';\nimport * as Linking from 'expo-linking';\n\nimport { RootStackParamList } from '../types';\n\nconst linking: LinkingOptions<RootStackParamList> = {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: {\n        screens: {\n          TabOne: {\n            screens: {\n              TabOneScreen: 'one',\n            },\n          },\n          TabTwo: {\n            screens: {\n              TabTwoScreen: 'two',\n            },\n          },\n        },\n      },\n      Modal: 'modal',\n      NotFound: '*',\n    },\n  },\n};\n\nexport default linking;\n"],"mappings":";;;;;AAOA;;;;;;AAIA,IAAMA,OAA2C,GAAG;EAClDC,QAAQ,EAAE,CAACC,OAAO,CAACC,OAAR,CAAgB,GAAhB,CAAD,CADwC;EAElDC,MAAM,EAAE;IACNC,OAAO,EAAE;MACPC,IAAI,EAAE;QACJD,OAAO,EAAE;UACPE,MAAM,EAAE;YACNF,OAAO,EAAE;cACPG,YAAY,EAAE;YADP;UADH,CADD;UAMPC,MAAM,EAAE;YACNJ,OAAO,EAAE;cACPK,YAAY,EAAE;YADP;UADH;QAND;MADL,CADC;MAePC,KAAK,EAAE,OAfA;MAgBPC,QAAQ,EAAE;IAhBH;EADH;AAF0C,CAApD;eAwBeZ,O"},"metadata":{},"sourceType":"script"}