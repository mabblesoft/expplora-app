{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  makeUrl: true,\n  createURL: true,\n  parse: true,\n  addEventListener: true,\n  removeEventListener: true,\n  parseInitialURLAsync: true,\n  sendIntent: true,\n  openSettings: true,\n  getInitialURL: true,\n  openURL: true,\n  canOpenURL: true,\n  useURL: true\n};\nexports.addEventListener = addEventListener;\nexports.canOpenURL = canOpenURL;\nexports.createURL = createURL;\nexports.getInitialURL = getInitialURL;\nexports.makeUrl = makeUrl;\nexports.openSettings = openSettings;\nexports.openURL = openURL;\nexports.parse = parse;\nexports.parseInitialURLAsync = parseInitialURLAsync;\nexports.removeEventListener = removeEventListener;\nexports.sendIntent = sendIntent;\nexports.useURL = useURL;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _expoConstants = _interopRequireDefault(require(\"expo-constants\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _react = require(\"react\");\n\nvar _urlParse = _interopRequireDefault(require(\"url-parse\"));\n\nvar _ExpoLinking = _interopRequireDefault(require(\"./ExpoLinking\"));\n\nvar _Schemes = require(\"./Schemes\");\n\nObject.keys(_Schemes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _Schemes[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Schemes[key];\n    }\n  });\n});\n\nvar _Linking = require(\"./Linking.types\");\n\nObject.keys(_Linking).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _Linking[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Linking[key];\n    }\n  });\n});\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction validateURL(url) {\n  (0, _invariant.default)(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n  (0, _invariant.default)(url, 'Invalid URL: cannot be empty');\n}\n\nfunction getHostUri() {\n  var _Constants$manifest, _Constants$manifest2, _Constants$manifest2$, _Constants$manifest2$2;\n\n  if ((_Constants$manifest = _expoConstants.default.manifest) !== null && _Constants$manifest !== void 0 && _Constants$manifest.hostUri) {\n    return _expoConstants.default.manifest.hostUri;\n  } else if ((_Constants$manifest2 = _expoConstants.default.manifest2) !== null && _Constants$manifest2 !== void 0 && (_Constants$manifest2$ = _Constants$manifest2.extra) !== null && _Constants$manifest2$ !== void 0 && (_Constants$manifest2$2 = _Constants$manifest2$.expoClient) !== null && _Constants$manifest2$2 !== void 0 && _Constants$manifest2$2.hostUri) {\n    return _expoConstants.default.manifest2.extra.expoClient.hostUri;\n  } else if (!(0, _Schemes.hasCustomScheme)()) {\n    return removeScheme(_expoConstants.default.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n  } else {\n    return null;\n  }\n}\n\nfunction isExpoHosted() {\n  var _Constants$manifest3;\n\n  var hostUri = getHostUri();\n  return !!(hostUri && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(hostUri) || (_Constants$manifest3 = _expoConstants.default.manifest) !== null && _Constants$manifest3 !== void 0 && _Constants$manifest3.developer));\n}\n\nfunction removeScheme(url) {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction removePort(url) {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction removeLeadingSlash(url) {\n  return url.replace(/^\\//, '');\n}\n\nfunction removeTrailingSlashAndQueryString(url) {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction ensureTrailingSlash(input, shouldAppend) {\n  var hasSlash = input.endsWith('/');\n\n  if (hasSlash && !shouldAppend) {\n    return input.substring(0, input.length - 1);\n  } else if (!hasSlash && shouldAppend) {\n    return \"\".concat(input, \"/\");\n  }\n\n  return input;\n}\n\nfunction ensureLeadingSlash(input, shouldAppend) {\n  var hasSlash = input.startsWith('/');\n\n  if (hasSlash && !shouldAppend) {\n    return input.substring(1);\n  } else if (!hasSlash && shouldAppend) {\n    return \"/\".concat(input);\n  }\n\n  return input;\n}\n\nfunction makeUrl() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var queryParams = arguments.length > 1 ? arguments[1] : undefined;\n  var scheme = arguments.length > 2 ? arguments[2] : undefined;\n  return createURL(path, {\n    queryParams: queryParams,\n    scheme: scheme,\n    isTripleSlashed: true\n  });\n}\n\nfunction createURL(path) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      scheme = _ref.scheme,\n      _ref$queryParams = _ref.queryParams,\n      queryParams = _ref$queryParams === void 0 ? {} : _ref$queryParams,\n      _ref$isTripleSlashed = _ref.isTripleSlashed,\n      isTripleSlashed = _ref$isTripleSlashed === void 0 ? false : _ref$isTripleSlashed;\n\n  if (_expoModulesCore.Platform.OS === 'web') {\n    if (!_expoModulesCore.Platform.isDOMAvailable) return '';\n    var origin = ensureTrailingSlash(window.location.origin, false);\n\n    var _queryString = _qs.default.stringify(queryParams);\n\n    if (_queryString) {\n      _queryString = \"?\".concat(_queryString);\n    }\n\n    var outputPath = path;\n    if (outputPath) outputPath = ensureLeadingSlash(path, true);\n    return encodeURI(\"\".concat(origin).concat(outputPath).concat(_queryString));\n  }\n\n  var resolvedScheme = (0, _Schemes.resolveScheme)({\n    scheme: scheme\n  });\n  var hostUri = getHostUri() || '';\n\n  if ((0, _Schemes.hasCustomScheme)() && isExpoHosted()) {\n    hostUri = '';\n  }\n\n  if (path) {\n    if (isExpoHosted() && hostUri) {\n      path = \"/--/\".concat(removeLeadingSlash(path));\n    }\n\n    if (isTripleSlashed && !path.startsWith('/')) {\n      path = \"/\".concat(path);\n    }\n  } else {\n    path = '';\n  }\n\n  var queryString = '';\n  var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    var paramsFromHostUri = {};\n\n    try {\n      var parsedParams = _qs.default.parse(queryString);\n\n      if ((0, _typeof2.default)(parsedParams) === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch (_unused) {}\n\n    queryParams = _objectSpread(_objectSpread({}, queryParams), paramsFromHostUri);\n  }\n\n  queryString = _qs.default.stringify(queryParams);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  hostUri = ensureLeadingSlash(hostUri, !isTripleSlashed);\n  return encodeURI(\"\".concat(resolvedScheme, \":\").concat(isTripleSlashed ? '/' : '', \"/\").concat(hostUri).concat(path).concat(queryString));\n}\n\nfunction parse(url) {\n  validateURL(url);\n  var parsed = (0, _urlParse.default)(url, true);\n\n  for (var param in parsed.query) {\n    parsed.query[param] = decodeURIComponent(parsed.query[param]);\n  }\n\n  var queryParams = parsed.query;\n  var hostUri = getHostUri() || '';\n  var hostUriStripped = removePort(removeTrailingSlashAndQueryString(hostUri));\n  var path = parsed.pathname || null;\n  var hostname = parsed.hostname || null;\n  var scheme = parsed.protocol || null;\n\n  if (scheme) {\n    scheme = scheme.substring(0, scheme.length - 1);\n  }\n\n  if (path) {\n    path = removeLeadingSlash(path);\n    var expoPrefix = null;\n\n    if (hostUriStripped) {\n      var parts = hostUriStripped.split('/');\n      expoPrefix = parts.slice(1).concat(['--/']).join('/');\n    }\n\n    if (isExpoHosted() && !(0, _Schemes.hasCustomScheme)() && expoPrefix && path.startsWith(expoPrefix)) {\n      path = path.substring(expoPrefix.length);\n      hostname = null;\n    } else if (path.indexOf('+') > -1) {\n      path = path.substring(path.indexOf('+') + 1);\n    }\n  }\n\n  return {\n    hostname: hostname,\n    path: path,\n    queryParams: queryParams,\n    scheme: scheme\n  };\n}\n\nfunction addEventListener(type, handler) {\n  return _ExpoLinking.default.addEventListener(type, handler);\n}\n\nfunction removeEventListener(type, handler) {\n  _ExpoLinking.default.removeEventListener(type, handler);\n}\n\nfunction parseInitialURLAsync() {\n  return _parseInitialURLAsync.apply(this, arguments);\n}\n\nfunction _parseInitialURLAsync() {\n  _parseInitialURLAsync = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n    var initialUrl;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _ExpoLinking.default.getInitialURL();\n\n          case 2:\n            initialUrl = _context.sent;\n\n            if (initialUrl) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              scheme: null,\n              hostname: null,\n              path: null,\n              queryParams: null\n            });\n\n          case 5:\n            return _context.abrupt(\"return\", parse(initialUrl));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseInitialURLAsync.apply(this, arguments);\n}\n\nfunction sendIntent(_x, _x2) {\n  return _sendIntent.apply(this, arguments);\n}\n\nfunction _sendIntent() {\n  _sendIntent = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2(action, extras) {\n    return _regenerator.default.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(_expoModulesCore.Platform.OS === 'android')) {\n              _context2.next = 4;\n              break;\n            }\n\n            _context2.next = 3;\n            return _ExpoLinking.default.sendIntent(action, extras);\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n            throw new _expoModulesCore.UnavailabilityError('Linking', 'sendIntent');\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sendIntent.apply(this, arguments);\n}\n\nfunction openSettings() {\n  return _openSettings.apply(this, arguments);\n}\n\nfunction _openSettings() {\n  _openSettings = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3() {\n    return _regenerator.default.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(_expoModulesCore.Platform.OS === 'web')) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new _expoModulesCore.UnavailabilityError('Linking', 'openSettings');\n\n          case 2:\n            if (!_ExpoLinking.default.openSettings) {\n              _context3.next = 6;\n              break;\n            }\n\n            _context3.next = 5;\n            return _ExpoLinking.default.openSettings();\n\n          case 5:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n            _context3.next = 8;\n            return openURL('app-settings:');\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _openSettings.apply(this, arguments);\n}\n\nfunction getInitialURL() {\n  return _getInitialURL.apply(this, arguments);\n}\n\nfunction _getInitialURL() {\n  _getInitialURL = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4() {\n    var _yield$NativeLinking$;\n\n    return _regenerator.default.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _ExpoLinking.default.getInitialURL();\n\n          case 2:\n            _context4.t1 = _yield$NativeLinking$ = _context4.sent;\n            _context4.t0 = _context4.t1 !== null;\n\n            if (!_context4.t0) {\n              _context4.next = 6;\n              break;\n            }\n\n            _context4.t0 = _yield$NativeLinking$ !== void 0;\n\n          case 6:\n            if (!_context4.t0) {\n              _context4.next = 10;\n              break;\n            }\n\n            _context4.t2 = _yield$NativeLinking$;\n            _context4.next = 11;\n            break;\n\n          case 10:\n            _context4.t2 = null;\n\n          case 11:\n            return _context4.abrupt(\"return\", _context4.t2);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getInitialURL.apply(this, arguments);\n}\n\nfunction openURL(_x3) {\n  return _openURL.apply(this, arguments);\n}\n\nfunction _openURL() {\n  _openURL = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5(url) {\n    return _regenerator.default.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            validateURL(url);\n            _context5.next = 3;\n            return _ExpoLinking.default.openURL(url);\n\n          case 3:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _openURL.apply(this, arguments);\n}\n\nfunction canOpenURL(_x4) {\n  return _canOpenURL.apply(this, arguments);\n}\n\nfunction _canOpenURL() {\n  _canOpenURL = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(url) {\n    return _regenerator.default.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            validateURL(url);\n            _context6.next = 3;\n            return _ExpoLinking.default.canOpenURL(url);\n\n          case 3:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _canOpenURL.apply(this, arguments);\n}\n\nfunction useURL() {\n  var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      url = _useState2[0],\n      setLink = _useState2[1];\n\n  function onChange(event) {\n    setLink(event.url);\n  }\n\n  (0, _react.useEffect)(function () {\n    getInitialURL().then(function (url) {\n      return setLink(url);\n    });\n    var subscription = addEventListener('url', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return url;\n}","map":{"version":3,"sources":["../src/Linking.ts"],"names":[],"mappings":"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","sourcesContent":["import Constants from 'expo-constants';\nimport { Platform, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport qs from 'qs';\nimport { useEffect, useState } from 'react';\nimport { EmitterSubscription } from 'react-native';\nimport URL from 'url-parse';\n\nimport NativeLinking from './ExpoLinking';\nimport {\n  CreateURLOptions,\n  ParsedURL,\n  QueryParams,\n  SendIntentExtras,\n  URLListener,\n} from './Linking.types';\nimport { hasCustomScheme, resolveScheme } from './Schemes';\n\nfunction validateURL(url: string): void {\n  invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n  invariant(url, 'Invalid URL: cannot be empty');\n}\n\nfunction getHostUri(): string | null {\n  if (Constants.manifest?.hostUri) {\n    return Constants.manifest.hostUri;\n  } else if (Constants.manifest2?.extra?.expoClient?.hostUri) {\n    return Constants.manifest2.extra.expoClient.hostUri;\n  } else if (!hasCustomScheme()) {\n    // we're probably not using up-to-date xdl, so just fake it for now\n    // we have to remove the /--/ on the end since this will be inserted again later\n    return removeScheme(Constants.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n  } else {\n    return null;\n  }\n}\n\nfunction isExpoHosted(): boolean {\n  const hostUri = getHostUri();\n  return !!(\n    hostUri &&\n    (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test)(:.*)?(\\/.*)?$/.test(hostUri) ||\n      Constants.manifest?.developer)\n  );\n}\n\nfunction removeScheme(url: string): string {\n  return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n}\n\nfunction removePort(url: string): string {\n  return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n}\n\nfunction removeLeadingSlash(url: string): string {\n  return url.replace(/^\\//, '');\n}\n\nfunction removeTrailingSlashAndQueryString(url: string): string {\n  return url.replace(/\\/?\\?.*$/, '');\n}\n\nfunction ensureTrailingSlash(input: string, shouldAppend: boolean): string {\n  const hasSlash = input.endsWith('/');\n  if (hasSlash && !shouldAppend) {\n    return input.substring(0, input.length - 1);\n  } else if (!hasSlash && shouldAppend) {\n    return `${input}/`;\n  }\n  return input;\n}\n\nfunction ensureLeadingSlash(input: string, shouldAppend: boolean): string {\n  const hasSlash = input.startsWith('/');\n  if (hasSlash && !shouldAppend) {\n    return input.substring(1);\n  } else if (!hasSlash && shouldAppend) {\n    return `/${input}`;\n  }\n  return input;\n}\n\n// @needsAudit\n/**\n * Create a URL that works for the environment the app is currently running in.\n * The scheme in bare and standalone must be defined in the app.json under `expo.scheme`.\n *\n * # Examples\n * - Bare: empty string\n * - Standalone, Custom: `yourscheme:///path`\n * - Web (dev): `https://localhost:19006/path`\n * - Web (prod): `https://myapp.com/path`\n * - Expo Client (dev): `exp://128.0.0.1:19000/--/path`\n * - Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\n *\n * @param path addition path components to append to the base URL.\n * @param queryParams An object with a set of query parameters. These will be merged with any\n * Expo-specific parameters that are needed (e.g. release channel) and then appended to the URL\n * as a query string.\n * @param scheme Optional URI protocol to use in the URL `<scheme>:///`, when `undefined` the scheme\n * will be chosen from the Expo config (`app.config.js` or `app.json`).\n * @return A URL string which points to your app with the given deep link information.\n * @deprecated An alias for [`createURL()`](#linkingcreateurlpath-namedparameters). This method is\n * deprecated and will be removed in a future SDK version.\n */\nexport function makeUrl(path: string = '', queryParams?: QueryParams, scheme?: string): string {\n  return createURL(path, { queryParams, scheme, isTripleSlashed: true });\n}\n\n// @needsAudit\n/**\n * Helper method for constructing a deep link into your app, given an optional path and set of query\n * parameters. Creates a URI scheme with two slashes by default.\n *\n * The scheme in bare and standalone must be defined in the Expo config (`app.config.js` or `app.json`)\n * under `expo.scheme`.\n *\n * # Examples\n * - Bare: `<scheme>://path` - uses provided scheme or scheme from Expo config `scheme`.\n * - Standalone, Custom: `yourscheme://path`\n * - Web (dev): `https://localhost:19006/path`\n * - Web (prod): `https://myapp.com/path`\n * - Expo Client (dev): `exp://128.0.0.1:19000/--/path`\n * - Expo Client (prod): `exp://exp.host/@yourname/your-app/--/path`\n *\n * @param path Addition path components to append to the base URL.\n * @param namedParameters Additional options object.\n * @return A URL string which points to your app with the given deep link information.\n */\nexport function createURL(\n  path: string,\n  { scheme, queryParams = {}, isTripleSlashed = false }: CreateURLOptions = {}\n): string {\n  if (Platform.OS === 'web') {\n    if (!Platform.isDOMAvailable) return '';\n\n    const origin = ensureTrailingSlash(window.location.origin, false);\n    let queryString = qs.stringify(queryParams);\n    if (queryString) {\n      queryString = `?${queryString}`;\n    }\n\n    let outputPath = path;\n    if (outputPath) outputPath = ensureLeadingSlash(path, true);\n\n    return encodeURI(`${origin}${outputPath}${queryString}`);\n  }\n\n  const resolvedScheme = resolveScheme({ scheme });\n\n  let hostUri = getHostUri() || '';\n\n  if (hasCustomScheme() && isExpoHosted()) {\n    hostUri = '';\n  }\n\n  if (path) {\n    if (isExpoHosted() && hostUri) {\n      path = `/--/${removeLeadingSlash(path)}`;\n    }\n    if (isTripleSlashed && !path.startsWith('/')) {\n      path = `/${path}`;\n    }\n  } else {\n    path = '';\n  }\n\n  // merge user-provided query params with any that were already in the hostUri\n  // e.g. release-channel\n  let queryString = '';\n  const queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n  if (queryStringMatchResult) {\n    hostUri = queryStringMatchResult[1];\n    queryString = queryStringMatchResult[2];\n    let paramsFromHostUri = {};\n    try {\n      const parsedParams = qs.parse(queryString);\n      if (typeof parsedParams === 'object') {\n        paramsFromHostUri = parsedParams;\n      }\n    } catch {}\n    queryParams = {\n      ...queryParams,\n      ...paramsFromHostUri,\n    };\n  }\n  queryString = qs.stringify(queryParams);\n  if (queryString) {\n    queryString = `?${queryString}`;\n  }\n\n  hostUri = ensureLeadingSlash(hostUri, !isTripleSlashed);\n\n  return encodeURI(\n    `${resolvedScheme}:${isTripleSlashed ? '/' : ''}/${hostUri}${path}${queryString}`\n  );\n}\n\n// @needsAudit\n/**\n * Helper method for parsing out deep link information from a URL.\n * @param url A URL that points to the currently running experience (e.g. an output of `Linking.createURL()`).\n * @return A `ParsedURL` object.\n */\nexport function parse(url: string): ParsedURL {\n  validateURL(url);\n\n  const parsed = URL(url, /* parseQueryString */ true);\n\n  for (const param in parsed.query) {\n    parsed.query[param] = decodeURIComponent(parsed.query[param]!);\n  }\n  const queryParams = parsed.query;\n\n  const hostUri = getHostUri() || '';\n  const hostUriStripped = removePort(removeTrailingSlashAndQueryString(hostUri));\n\n  let path = parsed.pathname || null;\n  let hostname = parsed.hostname || null;\n  let scheme = parsed.protocol || null;\n\n  if (scheme) {\n    // Remove colon at end\n    scheme = scheme.substring(0, scheme.length - 1);\n  }\n\n  if (path) {\n    path = removeLeadingSlash(path);\n\n    let expoPrefix: string | null = null;\n    if (hostUriStripped) {\n      const parts = hostUriStripped.split('/');\n      expoPrefix = parts.slice(1).concat(['--/']).join('/');\n    }\n\n    if (isExpoHosted() && !hasCustomScheme() && expoPrefix && path.startsWith(expoPrefix)) {\n      path = path.substring(expoPrefix.length);\n      hostname = null;\n    } else if (path.indexOf('+') > -1) {\n      path = path.substring(path.indexOf('+') + 1);\n    }\n  }\n\n  return {\n    hostname,\n    path,\n    queryParams,\n    scheme,\n  };\n}\n\n// @needsAudit\n/**\n * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n * It is recommended to use the [`useURL()`](#useurl) hook instead.\n * @param type The only valid type is `'url'`.\n * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n * [`EventType`](#eventype).\n * @return An EmitterSubscription that has the remove method from EventSubscription\n * @see [React Native Docs Linking page](https://reactnative.dev/docs/linking#addeventlistener).\n */\nexport function addEventListener(type: 'url', handler: URLListener): EmitterSubscription {\n  return NativeLinking.addEventListener(type, handler);\n}\n\n/**\n * Remove a handler by passing the `url` event type and the handler.\n * @param type The only valid type is `'url'`.\n * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n * [`EventType`](#eventype).\n * @see [React Native Docs Linking page](https://reactnative.dev/docs/linking#removeeventlistener).\n */\nexport function removeEventListener(type: 'url', handler: URLListener): void {\n  NativeLinking.removeEventListener(type, handler);\n}\n\n// @needsAudit\n/**\n * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n * Parses the deep link information out of the URL used to open the experience initially.\n * If no link opened the app, all the fields will be `null`.\n * > On the web it parses the current window URL.\n * @return A promise that resolves with `ParsedURL` object.\n */\nexport async function parseInitialURLAsync(): Promise<ParsedURL> {\n  const initialUrl = await NativeLinking.getInitialURL();\n  if (!initialUrl) {\n    return {\n      scheme: null,\n      hostname: null,\n      path: null,\n      queryParams: null,\n    };\n  }\n\n  return parse(initialUrl);\n}\n\n// @needsAudit\n/**\n * Launch an Android intent with extras.\n * > Use [IntentLauncher](./intent-launcher) instead, `sendIntent` is only included in\n * > `Linking` for API compatibility with React Native's Linking API.\n * @platform android\n */\nexport async function sendIntent(action: string, extras?: SendIntentExtras[]): Promise<void> {\n  if (Platform.OS === 'android') {\n    return await NativeLinking.sendIntent(action, extras);\n  }\n  throw new UnavailabilityError('Linking', 'sendIntent');\n}\n\n// @needsAudit\n/**\n * Open the operating system settings app and displays the app’s custom settings, if it has any.\n * @platform ios\n */\nexport async function openSettings(): Promise<void> {\n  if (Platform.OS === 'web') {\n    throw new UnavailabilityError('Linking', 'openSettings');\n  }\n  if (NativeLinking.openSettings) {\n    return await NativeLinking.openSettings();\n  }\n  await openURL('app-settings:');\n}\n\n// @needsAudit\n/**\n * Get the URL that was used to launch the app if it was launched by a link.\n * @return The URL string that launched your app, or `null`.\n */\nexport async function getInitialURL(): Promise<string | null> {\n  return (await NativeLinking.getInitialURL()) ?? null;\n}\n\n// @needsAudit\n/**\n * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n * for more information.\n * @param url A URL for the operating system to open, eg: `tel:5555555`, `exp://`.\n * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n * are no applications registered for the URL or the user cancels the dialog.\n */\nexport async function openURL(url: string): Promise<true> {\n  validateURL(url);\n  return await NativeLinking.openURL(url);\n}\n\n// @needsAudit\n/**\n * Determine whether or not an installed app can handle a given URL.\n * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n * @param url The URL that you want to test can be opened.\n * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n * `false` if not.\n *\n * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#opening-links-to-other-apps).\n */\nexport async function canOpenURL(url: string): Promise<boolean> {\n  validateURL(url);\n  return await NativeLinking.canOpenURL(url);\n}\n\n// @needsAudit\n/**\n * Returns the initial URL followed by any subsequent changes to the URL.\n * @return Returns the initial URL or `null`.\n */\nexport function useURL(): string | null {\n  const [url, setLink] = useState<string | null>(null);\n\n  function onChange(event: { url: string }) {\n    setLink(event.url);\n  }\n\n  useEffect(() => {\n    getInitialURL().then((url) => setLink(url));\n    const subscription = addEventListener('url', onChange);\n    return () => subscription.remove();\n  }, []);\n\n  return url;\n}\n\nexport * from './Linking.types';\nexport * from './Schemes';\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}