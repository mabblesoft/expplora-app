{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useOnPreventRemove;\nexports.shouldPreventRemove = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\n\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nvar shouldPreventRemove = function shouldPreventRemove(emitter, beforeRemoveListeners, currentRoutes, nextRoutes, action) {\n  var _action$VISITED_ROUTE;\n\n  var nextRouteKeys = nextRoutes.map(function (route) {\n    return route.key;\n  });\n  var removedRoutes = currentRoutes.filter(function (route) {\n    return !nextRouteKeys.includes(route.key);\n  }).reverse();\n  var visitedRouteKeys = (_action$VISITED_ROUTE = action[VISITED_ROUTE_KEYS]) !== null && _action$VISITED_ROUTE !== void 0 ? _action$VISITED_ROUTE : new Set();\n\n  var beforeRemoveAction = _objectSpread(_objectSpread({}, action), {}, (0, _defineProperty2.default)({}, VISITED_ROUTE_KEYS, visitedRouteKeys));\n\n  var _iterator = _createForOfIteratorHelper(removedRoutes),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var route = _step.value;\n\n      var _beforeRemoveListener;\n\n      if (visitedRouteKeys.has(route.key)) {\n        continue;\n      }\n\n      var isPrevented = (_beforeRemoveListener = beforeRemoveListeners[route.key]) === null || _beforeRemoveListener === void 0 ? void 0 : _beforeRemoveListener.call(beforeRemoveListeners, beforeRemoveAction);\n\n      if (isPrevented) {\n        return true;\n      }\n\n      visitedRouteKeys.add(route.key);\n      var event = emitter.emit({\n        type: 'beforeRemove',\n        target: route.key,\n        data: {\n          action: beforeRemoveAction\n        },\n        canPreventDefault: true\n      });\n\n      if (event.defaultPrevented) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return false;\n};\n\nexports.shouldPreventRemove = shouldPreventRemove;\n\nfunction useOnPreventRemove(_ref) {\n  var getState = _ref.getState,\n      emitter = _ref.emitter,\n      beforeRemoveListeners = _ref.beforeRemoveListeners;\n\n  var _React$useContext = React.useContext(_NavigationBuilderContext.default),\n      addKeyedListener = _React$useContext.addKeyedListener;\n\n  var route = React.useContext(_NavigationRouteContext.default);\n  var routeKey = route === null || route === void 0 ? void 0 : route.key;\n  React.useEffect(function () {\n    if (routeKey) {\n      return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('beforeRemove', routeKey, function (action) {\n        var state = getState();\n        return shouldPreventRemove(emitter, beforeRemoveListeners, state.routes, [], action);\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}","map":{"version":3,"sources":["useOnPreventRemove.tsx"],"names":["VISITED_ROUTE_KEYS","Symbol","shouldPreventRemove","nextRouteKeys","nextRoutes","route","removedRoutes","currentRoutes","visitedRouteKeys","action","beforeRemoveAction","isPrevented","beforeRemoveListeners","event","type","target","data","canPreventDefault","addKeyedListener","React","routeKey","state","getState"],"mappings":"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","sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationBuilderContext, {\n  ChildBeforeRemoveListener,\n} from './NavigationBuilderContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options = {\n  getState: () => NavigationState;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n};\n\nconst VISITED_ROUTE_KEYS = Symbol('VISITED_ROUTE_KEYS');\n\nexport const shouldPreventRemove = (\n  emitter: NavigationEventEmitter<EventMapCore<any>>,\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,\n  currentRoutes: { key: string }[],\n  nextRoutes: { key?: string | undefined }[],\n  action: NavigationAction\n) => {\n  const nextRouteKeys = nextRoutes.map((route) => route.key);\n\n  // Call these in reverse order so last screens handle the event first\n  const removedRoutes = currentRoutes\n    .filter((route) => !nextRouteKeys.includes(route.key))\n    .reverse();\n\n  const visitedRouteKeys: Set<string> =\n    // @ts-expect-error: add this property to mark that we've already emitted this action\n    action[VISITED_ROUTE_KEYS] ?? new Set<string>();\n\n  const beforeRemoveAction = {\n    ...action,\n    [VISITED_ROUTE_KEYS]: visitedRouteKeys,\n  };\n\n  for (const route of removedRoutes) {\n    if (visitedRouteKeys.has(route.key)) {\n      // Skip if we've already emitted this action for this screen\n      continue;\n    }\n\n    // First, we need to check if any child screens want to prevent it\n    const isPrevented = beforeRemoveListeners[route.key]?.(beforeRemoveAction);\n\n    if (isPrevented) {\n      return true;\n    }\n\n    visitedRouteKeys.add(route.key);\n\n    const event = emitter.emit({\n      type: 'beforeRemove',\n      target: route.key,\n      data: { action: beforeRemoveAction },\n      canPreventDefault: true,\n    });\n\n    if (event.defaultPrevented) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport default function useOnPreventRemove({\n  getState,\n  emitter,\n  beforeRemoveListeners,\n}: Options) {\n  const { addKeyedListener } = React.useContext(NavigationBuilderContext);\n  const route = React.useContext(NavigationRouteContext);\n  const routeKey = route?.key;\n\n  React.useEffect(() => {\n    if (routeKey) {\n      return addKeyedListener?.('beforeRemove', routeKey, (action) => {\n        const state = getState();\n\n        return shouldPreventRemove(\n          emitter,\n          beforeRemoveListeners,\n          state.routes,\n          [],\n          action\n        );\n      });\n    }\n  }, [addKeyedListener, beforeRemoveListeners, emitter, getState, routeKey]);\n}\n"]},"metadata":{},"sourceType":"script"}